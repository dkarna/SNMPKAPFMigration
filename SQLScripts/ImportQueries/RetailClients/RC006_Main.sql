DECLARE @RetailPhone TABLE (ORGKEY VARCHAR(32),PHONEEMAILTYPE VARCHAR(200), PHONEOREMAIL VARCHAR(50), PHONENO VARCHAR(25), PHONENOLOCALCODE VARCHAR(20), PHONENOCITYCODE VARCHAR(20), PHONENOCOUNTRYCODE VARCHAR(20),  WORKEXTENSION VARCHAR(30), EMAIL VARCHAR(50), EMAILPALM VARCHAR(50), URL VARCHAR(150), PREFERREDFLAG VARCHAR(50), START_DATE DATE, END_DATE DATE, USERFIELD1 VARCHAR(200), USERFIELD2 VARCHAR(200), USERFIELD3 VARCHAR(200), DATE1 DATE, DATE2 DATE, DATE3 DATE, BANK_ID VARCHAR(8));
DECLARE @RetailEmail TABLE (ORGKEY VARCHAR(32),PHONEEMAILTYPE VARCHAR(200), PHONEOREMAIL VARCHAR(50), PHONENO VARCHAR(25), PHONENOLOCALCODE VARCHAR(20), PHONENOCITYCODE VARCHAR(20), PHONENOCOUNTRYCODE VARCHAR(20),  WORKEXTENSION VARCHAR(30), EMAIL VARCHAR(50), EMAILPALM VARCHAR(50), URL VARCHAR(150), PREFERREDFLAG VARCHAR(50), START_DATE DATE, END_DATE DATE, USERFIELD1 VARCHAR(200), USERFIELD2 VARCHAR(200), USERFIELD3 VARCHAR(200), DATE1 DATE, DATE2 DATE, DATE3 DATE, BANK_ID VARCHAR(8));


INSERT INTO @RetailPhone         -- Populate ClientPhone table for clients having Phone or Mobile records only
SELECT DISTINCT 'RO'+ t2.ClientCode AS ORGKEY,'P' AS PHONEEMAILTYPE,'PHONE' AS PHONEOREMAIL,
CASE WHEN t2.Phone IS NOT NULL OR t2.Phone <> '' THEN t2.Phone 
WHEN t2.MobileNo IS NOT NULL OR t2.MobileNo <> '' THEN t2.MobileNo 
ELSE '' 
END AS PHONENO,'' AS PHONENOLOCALCODE,'' AS PHONENOCITYCODE,'977' AS PHONENOCOUNTRYCODE,'' AS WORKEXTENSION,'' AS EMAIL,'' AS EMAILPALM,'' AS URL,'PHONE' AS PREFERREDFLAG,'' AS START_DATE,'' AS END_DATE,
'Mobile No- '+ISNULL(MobileNo,'')+'/'+'Phone No- '+ISNULL(Phone,'')+'/'+'Email - '+ISNULL(eMail,'')+'/'+'Fax No- '+ISNULL(FaxNo,'') AS USERFIELD1,
'NA' AS USERFIELD2,'NA' AS USERFIELD3,'' AS DATE1, '' AS DATE2, '' AS DATE3,'SNMANPKA' AS BANK_ID
FROM ClientTable t2 JOIN Master t1  ON t1.ClientCode = t2.ClientCode
WHERE t1.IsBlocked NOT IN ('C','o')  -- Filters the closed or invalid or unapproved accounts
-- AND t2.Phone is not null or t2.Phone <> '' or t2.MobileNo is not null or t2.MobileNo <> ''    -- to filter null mobile and landline
AND EXISTS
(
       SELECT 1 FROM AcCustType WHERE MainCode = t1.MainCode and CustTypeCode = 'Z' and CustType IN ('11','12')
)
ORDER BY 1;

INSERT INTO @RetailEmail       -- Populate ClientEmail table for clients having email records only
SELECT DISTINCT 'RO'+ t2.ClientCode AS ORGKEY,'E' AS PHONEEMAILTYPE,'EMAIL' AS PHONEOREMAIL,
 '' AS PHONENO,'' AS PHONENOLOCALCODE,'' AS PHONENOCITYCODE,'' AS PHONENOCOUNTRYCODE,'' AS WORKEXTENSION,
 t2.eMail AS EMAIL,'' AS EMAILPALM,'' AS URL,'EMAIL' AS PREFERREDFLAG,'' AS START_DATE,'' AS END_DATE,
'Mobile No- '+ISNULL(MobileNo,'')+'/'+'Phone No- '+ISNULL(Phone,'')+'/'+'Email - '+ISNULL(eMail,'')+'/'+'Fax No- '+ISNULL(FaxNo,'') AS USERFIELD1,
'NA' AS USERFIELD2,'NA' AS USERFIELD3,'' AS DATE1, '' AS DATE2, '' AS DATE3,'SNMANPKA' AS BANK_ID
FROM ClientTable t2 JOIN Master t1  ON t1.ClientCode = t2.ClientCode
WHERE t1.IsBlocked NOT IN ('C','o')  -- Filters the closed or invalid or unapproved accounts
AND EXISTS
(
       SELECT 1 FROM AcCustType WHERE MainCode = t1.MainCode and CustTypeCode = 'Z' and CustType IN ('11','12')
)
ORDER BY 1;

SELECT * FROM @RetailPhone WHERE PHONENO != ''					-- Union the records from both the tables to get records separately
UNION		
SELECT * FROM @RetailEmail WHERE EMAIL != ''